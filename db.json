{
  "JavaScript": [
    {
      "id": "1",
      "question": "What does 'DOM' stand for in JavaScript?",
      "answer": "Document Object Model",
      "example": "Accessing and manipulating HTML elements using JavaScript."
    },
    {
      "id": "2",
      "question": "How do you declare a variable in JavaScript?",
      "answer": "Using 'var', 'let', or 'const' keyword.",
      "example": "let myVariable = 10;"
    },
    {
      "id": "3",
      "question": "What is the purpose of 'console.log()'?",
      "answer": "Output information to the console for debugging.",
      "example": "console.log('Hello, World!');"
    },
    {
      "id": "4",
      "question": "What is an array in JavaScript?",
      "answer": "A data structure that stores a collection of elements.",
      "example": "let colors = ['red', 'green', 'blue'];"
    },
    {
      "id": "5",
      "question": "Explain the difference between '==' and '===' in JavaScript.",
      "answer": "'==' checks for equality, while '===' checks for both value and type equality.",
      "example": "5 == '5' is true, but 5 === '5' is false."
    },
    {
      "id": "6",
      "question": "What is the purpose of the 'function' keyword in JavaScript?",
      "answer": "Declares a function in JavaScript.",
      "example": "function addNumbers(a, b) { return a + b; }"
    },
    {
      "id": "7",
      "question": "How do you comment in JavaScript?",
      "answer": "Using '//' for single-line comments and '/* */' for multi-line comments.",
      "example": "// This is a single-line comment\n/* This is a\n   multi-line comment */"
    },
    {
      "id": "8",
      "question": "What is an arrow function in JavaScript?",
      "answer": "A concise way to write function expressions.",
      "example": "const add = (a, b) => a + b;"
    },
    {
      "id": "9",
      "question": "Explain the purpose of the 'this' keyword in JavaScript.",
      "answer": "Refers to the current object.",
      "example": "const person = { name: 'John', greet: function() { console.log('Hello, ' + this.name + '!'); } };"
    },
    {
      "id": "10",
      "question": "How do you iterate over an array in JavaScript?",
      "answer": "Using loops like 'for' or array methods like 'forEach'.",
      "example": "const numbers = [1, 2, 3]; for (let i = 0; < numbers.length; i++) { console.log(numbers[i]); }"
    },
    {
      "id": "11",
      "question": "What is the purpose of the 'let' keyword in JavaScript?",
      "answer": "Declares a block-scoped variable.",
      "example": "let x = 5;"
    },
    {
      "id": "12",
      "question": "How do you add a class to an HTML element using JavaScript?",
      "answer": "Using the 'classList' property and the 'add' method.",
      "example": "document.getElementById('myElement').classList.add('newClass');"
    },
    {
      "id": "13",
      "question": "What is the purpose of 'async/await' keywords in JavaScript?",
      "answer": "Used to work with promises in a more synchronous way.",
      "example": "async function fetchData() { const response = await fetch('https://api.example.com/data'); const data = await response.json(); console.log(data); }"
    },
    {
      "id": "14",
      "question": "Explain the concept of event delegation in JavaScript.",
      "answer": "Handling events on parent elements rather than individual child elements.",
      "example": "<ul id='myList'><li>Item 1</li><li>Item 2</li><li>Item 3</li></ul>"
    },
    {
      "id": "15",
      "question": "What is the purpose of 'localStorage' in JavaScript?",
      "answer": "Provides a way to store key/value pairs in the browser.",
      "example": "localStorage.setItem('user', 'John'); const storedUser = localStorage.getItem('user');"
    },
    {
      "id": "16",
      "question": "How do you handle errors in JavaScript?",
      "answer": "Using 'try', 'catch', and 'finally' blocks.",
      "example": "try { /* Code that might throw an error */ } catch (error) { /* Handle the error */ } finally { /* Code that will always run */ }"
    },
    {
      "id": "17",
      "question": "What is the purpose of the 'fetch' API in JavaScript?",
      "answer": "Allows making HTTP requests in a more modern and flexible way.",
      "example": "fetch('https://api.example.com/data').then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));"
    },
    {
      "id": "18",
      "question": "How do you create a timer in JavaScript?",
      "answer": "Using 'setTimeout' or 'setInterval' functions.",
      "example": "setTimeout(() => { console.log('Delayed message'); }, 2000);"
    },
    {
      "id": "19",
      "question": "What is the purpose of the 'map' function in JavaScript?",
      "answer": "Creates a new array by applying a function to each element of an existing array.",
      "example": "const numbers = [1, 2, 3]; const doubled = numbers.map(num => num * 2);"
    },
    {
      "id": "20",
      "question": "Explain the concept of closures in JavaScript.",
      "answer": "Functions that have access to variables from their outer scope.",
      "example": "function outerFunction() { const outerVariable = 'I am from the outer function'; function innerFunction() { console.log(outerVariable); } return innerFunction; }"
    }
  ],
  "HTML": [
    {
      "id": 21,
      "Question": "What does 'HTML' stand for?",
      "Answer": "Hypertext Markup Language",
      "Example": "Creating the structure of a web page.",
      "Hint": "Think about the fundamental purpose of HTML in structuring content for the web."
    },
    {
      "id": 22,
      "Question": "How do you create a hyperlink in HTML?",
      "Answer": "<a href='https://example.com'>Link Text</a>",
      "Example": "",
      "Hint": "Consider the HTML tag used to create links and the required attributes."
    },
    {
      "id": 23,
      "Question": "What is the purpose of the `<head>` element in HTML?",
      "Answer": "Contains meta-information about the HTML document.",
      "Example": "<head><title>My Web Page</title></head>",
      "Hint": "Think about where meta-information and document-wide settings are placed in an HTML document."
    },
    {
      "id": 24,
      "Question": "How do you add an image to an HTML document?",
      "Answer": "<img src='image.jpg' alt='Description'>",
      "Example": "",
      "Hint": "Consider the HTML tag used to embed images and its required attributes."
    },
    {
      "id": 25,
      "Question": "What is the purpose of the `<div>` element in HTML?",
      "Answer": "Used to group other HTML elements together.",
      "Example": "<div><p>Paragraph 1</p><p>Paragraph 2</p></div>",
      "Hint": "Think about how the `<div>` element is commonly used for structuring and grouping content."
    },
    {
      "id": 26,
      "Question": "How do you create an ordered list in HTML?",
      "Answer": "<ol><li>Item 1</li><li>Item 2</li><li>Item 3</li></ol>",
      "Example": "",
      "Hint": "Consider the HTML tag used to create ordered lists and its structure."
    },
    {
      "id": 27,
      "Question": "What is the purpose of the `<meta>` tag in HTML?",
      "Answer": "Provides metadata about the HTML document.",
      "Example": "<meta charset='UTF-8'>",
      "Hint": "Think about where character encoding and other metadata are specified in an HTML document."
    },
    {
      "id": 28,
      "Question": "How do you create a form in HTML?",
      "Answer": "<form action='/submit' method='post'><label for='username'>Username:</label><input type='text' id='username' name='username'><input type='submit' value='Submit'></form>",
      "Example": "",
      "Hint": "Consider the HTML tags used to create forms and their attributes for defining form behavior."
    },
    {
      "id": 29,
      "Question": "Explain the difference between `<div>` and `<span>` in HTML.",
      "Answer": "`<div>` is a block-level element, and `<span>` is an inline element.",
      "Example": "<div>Block-level element</div><span>Inline element</span>",
      "Hint": "Think about the default display behavior of `<div>` and `<span>` and how they are used in layout."
    },
    {
      "id": 30,
      "Question": "What is the purpose of the `<a>` element in HTML?",
      "Answer": "Defines a hyperlink.",
      "Example": "<a href='https://example.com'>Visit Example.com</a>",
      "Hint": "Consider the HTML tag used to create hyperlinks and its attributes for specifying the destination URL."
    },
    {
      "id": 31,
      "Question": "How do you create a table in HTML?",
      "Answer": "<table><tr><th>Header 1</th><th>Header 2</th></tr><tr><td>Data 1</td><td>Data 2</td></tr></table>",
      "Example": "",
      "Hint": "Think about the HTML tags used to create tables, rows, and cells."
    },
    {
      "id": 32,
      "Question": "What is the purpose of the `<footer>` element in HTML?",
      "Answer": "Represents the footer of a section or page.",
      "Example": "<footer>&copy; 2024 My Website</footer>",
      "Hint": "Consider where footer content, such as copyright information, is typically placed in an HTML document."
    },
    {
      "id": 33,
      "Question": "How do you add a background color to an element in HTML?",
      "Answer": "Using the `style` attribute or external CSS.",
      "Example": "<div style='background-color: #ffeecc;'>Colored Div</div>",
      "Hint": "Think about how inline styles or external stylesheets can be used to apply background colors."
    },
    {
      "id": 34,
      "Question": "What is the purpose of the `<iframe>` element in HTML?",
      "Answer": "Embeds another document within the current HTML document.",
      "Example": "<iframe src='https://example.com' width='600' height='400'></iframe>",
      "Hint": "Consider scenarios where you want to embed content from another source within your HTML document."
    },
    {
      "id": 35,
      "Question": "How do you create a line break in HTML?",
      "Answer": "Using the `<br>` tag.",
      "Example": "This is a line<br>break.",
      "Hint": "Think about the HTML tag used to create line breaks within text."
    },
    {
      "id": 36,
      "Question": "What is the purpose of the `<abbr>` element in HTML?",
      "Answer": "Defines an abbreviation or acronym with an optional description.",
      "Example": "<abbr title='Hypertext Markup Language'>HTML</abbr>",
      "Hint": "Consider scenarios where you want to provide a full explanation for an abbreviation or acronym."
    },
    {
      "id": 37,
      "Question": "How do you create a dropdown list in HTML?",
      "Answer": "<select><option value='option1'>Option 1</option><option value='option2'>Option 2</option></select>",
      "Example": "",
      "Hint": "Think about the HTML tags used to create dropdown lists and their structure."
    },
    {
      "id": 38,
      "Question": "Explain the purpose of the `data-*` attributes in HTML.",
      "Answer": "Allows storing extra information on HTML elements.",
      "Example": "<div data-userid='123'>User 123</div>",
      "Hint": "Consider scenarios where you want to associate custom data with HTML elements."
    },
    {
      "id": 39,
      "Question": "What is the purpose of the `<nav>` element in HTML?",
      "Answer": "Represents a navigation menu.",
      "Example": "<nav><a href='/home'>Home</a><a href='/about'>About</a></nav>",
      "Hint": "Think about where navigation links are typically placed in an HTML document."
    },
    {
      "id": 40,
      "Question": "How do you create a comment in HTML?",
      "Answer": "<!-- This is a comment -->",
      "Example": "",
      "Hint": "Think about the syntax for creating comments in HTML."
    }
  ],
  "CSS": [
    {
      "id": 41,
      "Question": "What does 'CSS' stand for?",
      "Answer": "Cascading Style Sheets",
      "Example": "Styling the presentation of a web page.",
      "Hint": "Think about the purpose of CSS in styling the appearance of HTML elements."
    },
    {
      "id": 42,
      "Question": "How do you apply an external CSS file to an HTML document?",
      "Answer": "<link rel='stylesheet' type='text/css' href='styles.css'>",
      "Example": "",
      "Hint": "Consider the HTML tag used to link an external CSS file to an HTML document."
    },
    {
      "id": 43,
      "Question": "What is the purpose of the `box-sizing` property in CSS?",
      "Answer": "Defines how the size of an element is calculated, including padding and border.",
      "Example": "box-sizing: border-box;",
      "Hint": "Think about how `box-sizing` affects the total size of an element."
    },
    {
      "id": 44,
      "Question": "How do you center an element horizontally in CSS?",
      "Answer": "Using `margin: auto;` or `text-align: center;`.",
      "Example": "div { margin: auto; }",
      "Hint": "Consider the CSS properties and values used to center block-level and inline-level elements horizontally."
    },
    {
      "id": 45,
      "Question": "What is the purpose of the `flexbox` layout in CSS?",
      "Answer": "Provides a flexible and efficient way to layout items within a container.",
      "Example": "display: flex; justify-content: space-between;",
      "Hint": "Think about how `flexbox` simplifies the creation of complex layouts in CSS."
    },
    {
      "id": 46,
      "Question": "How do you change the text color of an element in CSS?",
      "Answer": "Using the `color` property.",
      "Example": "p { color: blue; }",
      "Hint": "Consider the CSS property used to set the color of text within an element."
    },
    {
      "id": 47,
      "Question": "What is the purpose of the `z-index` property in CSS?",
      "Answer": "Specifies the stack order of an element.",
      "Example": "position: absolute; z-index: 1;",
      "Hint": "Think about how `z-index` affects the positioning of elements in the stacking order."
    },
    {
      "id": 48,
      "Question": "How do you apply a hover effect to an element in CSS?",
      "Answer": "Using the `:hover` pseudo-class.",
      "Example": "a:hover { color: red; }",
      "Hint": "Consider the CSS pseudo-class used to apply styles when an element is hovered over."
    },
    {
      "id": 49,
      "Question": "Explain the difference between `padding` and `margin` in CSS.",
      "Answer": "`Padding` is the space inside the border, and `margin` is the space outside the border.",
      "Example": "div { padding: 10px; margin: 10px; }",
      "Hint": "Think about how `padding` and `margin` contribute to the spacing of elements."
    },
    {
      "id": 50,
      "Question": "What is the purpose of the `media query` in CSS?",
      "Answer": "Applies styles based on the characteristics of the device or viewport.",
      "Example": "@media (max-width: 600px) { body { font-size: 14px; } }",
      "Hint": "Consider how `media queries` are used for responsive web design."
    },
    {
      "id": 51,
      "Question": "How do you hide an element in CSS?",
      "Answer": "Using `display: none;` or `visibility: hidden;`.",
      "Example": "div { display: none; }",
      "Hint": "Consider the CSS properties used to hide elements with and without preserving space."
    },
    {
      "id": 52,
      "Question": "What is the purpose of the `transition` property in CSS?",
      "Answer": "Adds a smooth transition effect to changes in property values.",
      "Example": "transition: width 2s;",
      "Hint": "Think about how `transition` enhances the visual experience by animating property changes."
    },
    {
      "id": 53,
      "Question": "How do you select all paragraphs with a class of 'intro' in CSS?",
      "Answer": "`.intro` or `p.intro`.",
      "Example": ".intro { font-weight: bold; }",
      "Hint": "Consider the CSS selectors used to target elements with specific classes."
    },
    {
      "id": 54,
      "Question": "What is the purpose of the `position` property in CSS?",
      "Answer": "Specifies the positioning method used for an element.",
      "Example": "position: relative;",
      "Hint": "Think about how `position` determines the positioning of an element within its containing element."
    },
    {
      "id": 55,
      "Question": "How do you apply a gradient background to an element in CSS?",
      "Answer": "Using the `linear-gradient` or `radial-gradient` property.",
      "Example": "background: linear-gradient(to right, red, yellow);",
      "Hint": "Consider the CSS properties used to create gradient backgrounds."
    },
    {
      "id": 56,
      "Question": "What is the purpose of the `clearfix` hack in CSS?",
      "Answer": "Clears the floated elements within a container.",
      "Example": ".clearfix::after { content: ''; display: table; clear: both; }",
      "Hint": "Think about how the `clearfix` hack resolves issues with floated elements and container height."
    },
    {
      "id": 57,
      "Question": "How do you select the first child of an element in CSS?",
      "Answer": ":first-child",
      "Example": "p:first-child { font-weight: bold; }",
      "Hint": "Consider the CSS pseudo-class used to select the first child of a parent element."
    },
    {
      "id": 58,
      "Question": "What is the purpose of the `font-family` property in CSS?",
      "Answer": "Defines the preferred font for an element.",
      "Example": "body { font-family: 'Arial', sans-serif; }",
      "Hint": "Think about how `font-family` is used to specify the typeface or font family for text."
    },
    {
      "id": 59,
      "Question": "How do you apply a shadow to text in CSS?",
      "Answer": "Using the `text-shadow` property.",
      "Example": "h1 { text-shadow: 2px 2px 4px #000000; }",
      "Hint": "Consider the CSS property used to add a shadow effect to text."
    },
    {
      "id": 60,
      "Question": "Explain the purpose of the `box-shadow` property in CSS.",
      "Answer": "Adds a shadow effect to an element, including its border and background.",
      "Example": "box-shadow: 4px 4px 8px #999999;",
      "Hint": "Think about how `box-shadow` enhances the visual appearance of elements by adding a shadow."
    }
  ]  
}